document.addEventListener('DOMContentLoaded', function () {
    const favoriteModal = document.getElementById('favoriteModal');
    const closeModal = document.querySelector('.btn-close');
    const favoritesGrid = document.querySelector('.favorites-grid');
    const favoriteBtn = document.querySelector('.btn-favorite');

    if (!favoriteBtn) return;

    // üî• –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
    favoriteBtn.addEventListener('click', function () {
        fetch('/favorites')
            .then(response => response.json())
            .then(data => {
                favoritesGrid.innerHTML = ''; // –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º

                if (data.redirect) {
                    window.location.href = data.redirect;
                    return;
                }

                if (data.length === 0) {
                    favoritesGrid.innerHTML = '<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π.</p>';
                    return;
                }

                // üè† –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
                data.forEach(listing => {
                    const item = document.createElement('div');
                    item.classList.add('favorite-item');
                    item.innerHTML = `
                        <img src="${listing.photo ? '/storage/' + listing.photo : '/img/default.jpg'}" alt="–§–æ—Ç–æ" class="favorite-img">
                        <div class="favorite-details">
                            <h3>${listing.title}</h3>
                            <p>${listing.price} ‚ÇΩ/–Ω–æ—á—å</p>
                        </div>
                        <button class="remove-favorite" data-id="${listing.id}">‚ùå</button>
                    `;
                    favoritesGrid.appendChild(item);
                });

                // ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è
                document.querySelectorAll('.remove-favorite').forEach(btn => {
                    btn.addEventListener('click', function () {
                        const listingId = this.getAttribute('data-id');

                        fetch(`/favorite/${listingId}`, {
                            method: 'DELETE',
                            headers: {
                                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(() => {
                            this.parentElement.remove();
                            if (favoritesGrid.children.length === 0) {
                                favoritesGrid.innerHTML = '<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π.</p>';
                            }
                        })
                        .catch(error => console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error));
                    });
                });
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
                favoritesGrid.innerHTML = '<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö.</p>';
            });

        favoriteModal.style.display = 'flex';
    });

    // üî• –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeModal.addEventListener('click', () => {
        favoriteModal.style.display = 'none';
    });

    window.addEventListener('click', (e) => {
        if (e.target === favoriteModal) {
            favoriteModal.style.display = 'none';
        }
    });
});
